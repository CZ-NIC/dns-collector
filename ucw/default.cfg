# Configuration variables of the UCW library and their default values
# (c) 2005--2014 Martin Mares <mj@ucw.cz>

# Version of the whole package
Set("UCW_VERSION" => "6.0-dev");
Set("UCW_VERSION_CODE" => 6000000);

# Name of libraries in packages (libucw$UCW_ABI_SUFFIX.so.0.0, etc.)
Set("UCW_ABI_SUFFIX" => "-6.0");

# Compile everything with debug information and ASSERT's
UnSet("CONFIG_DEBUG");

# Environment variable with a switch to abort() on die().
# Any non-empty value of the variable turns this feature on.
Set("CONFIG_UCW_ENV_VAR_DIE_BY_ABORT" => "UCW_DIE_BY_ABORT");

# Enable aggressive optimizations depending on exact CPU type (don't use for portable packages)
UnSet("CONFIG_EXACT_CPU");

# Support files >2GB
Set("CONFIG_UCW_LARGE_FILES");

# Use shared libraries
UnSet("CONFIG_SHARED");

# If your system can't reset getopt with 'optind = 0', you need to compile our internal copy
# of GNU libc's getopt. This should not be necessary on GNU libc.
UnSet("CONFIG_UCW_OWN_GETOPT");

# Install libraries and their API includes
UnSet("CONFIG_INSTALL_API");

# Build with support for multi-threaded programs
Set("CONFIG_UCW_THREADS" => 1);

# Include Perl modules
Set("CONFIG_UCW_PERL" => 1);

# Include Perl modules written in C
UnSet("CONFIG_UCW_PERL_MODULES");

# Include support utilities for shell scripts
Set("CONFIG_UCW_SHELL_UTILS" => 1);

# Include utilities
Set("CONFIG_UCW_UTILS" => 1);

# Include obsolete ucw-daemon-helper utility
UnSet("CONFIG_UCW_OBSOLETE_DAEMON_HELPER");

# Default configuration file
UnSet("CONFIG_UCW_DEFAULT_CONFIG");

# Environment variable with configuration file
UnSet("CONFIG_UCW_ENV_VAR_CONFIG");

# Allow use of direct IO on files
Set("CONFIG_UCW_DIRECT_IO");
Set("CONFIG_UCW_FB_DIRECT");

# Use thread-local storage (needs GCC-support, default: auto-detect)
# Set("CONFIG_UCW_TLS");

# Use epoll (needs support in libc and kernel, default: auto-detect)
# Set("CONFIG_UCW_EPOLL");

# Use monotonic clock (default: yes on Linux, no elsewhere)
# Set("CONFIG_UCW_MONOTONIC_CLOCK");

# Which regular expression library should be used? If none is selected, we use BSD regex from libc.
UnSet("CONFIG_UCW_POSIX_REGEX");
UnSet("CONFIG_UCW_PCRE");

# Compile tools used for debugging and testing of LibUCW
UnSet("CONFIG_UCW_DEBUG_TOOLS");

# Clean up library ABI by attaching "ucw_" prefix to all externally visible symbols
Set("CONFIG_UCW_CLEAN_ABI" => 1);

# Return success
1;
