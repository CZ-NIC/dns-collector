

logging {
  
  ### Logging - configure the default log, stderr
  stream {
    name default-log
    filedesc 2
  
    levels:reset debug info warn error fatal
    types:reset default spam
  
    # Limit the rate of spam (potentially very frequent) messages
    limit {
      types spam
      rate 5
      burst 30
    }
  }

}



collector {
  ### Input
  
  # Maximal length of packet data prefix to capture
  capture_limit 300

  ### Processing

  # Length of a time frame for request/response matching
  timeframe_length 5.0

  # Size of the hashtable to match requests to responses is 2^order
  hash_order 20

  ### Outputs
  # Possible fields:
  #   flags client_addr client_port server_addr server_port id qname qtype qclass
  #   request_time_us request_flags request_ans_rrs request_auth_rrs request_add_rrs request_length
  #   response_time_us response_flags response_ans_rrs response_auth_rrs response_add_rrs response_length

#  output_proto {
#    path_template "/dev/null"
#    #path_template "../out/matches-%Y%m%d-%H%M%S.pb.lz4"
#    compression none
#    period 300.0
#    fields flags client_addr client_port qname qtype qclass id request_time_us request_flags response_time_us response_flags
#  }
#
  output_csv {
    path "../out/akuma-%Y%m%d-%H%M%S.csv"
    #path "/dev/null"
    compression none
    period 60.0
    fields flags client_addr client_port qname qtype qclass id request_time_us request_flags response_time_us response_flags
    #fields flags client_addr client_port id qname qtype qclass \
    #    request_time_us request_flags request_ans_rrs request_auth_rrs request_add_rrs request_length \
    #    response_time_us response_flags response_ans_rrs response_auth_rrs response_add_rrs response_length

    separator "|"
    header 1
  }

#  output_pcap {
#    #path_template "../out/akuma-%Y%m%d-%H%M%S-dump.pcap"
#    path_template "/dev/null"
#    compression none
#    period 600.0
#    dump_reasons other malformed fragmented protocol direction port bad_dns frame_full no_request
#
#    # rate limiting?
#  }
}
